@model POS.Solution.Core.Entities.Invoice

<form class="mt-3" id="invoice-form">

    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                <label asp-for="CustomerName">Customer Name</label>
                <input asp-for="CustomerName" class="form-control" required id="customerName"/>
                <span asp-validation-for="CustomerName" style="color: #FF0000"></span>
            </div>

            <div class="form-group">
                <label asp-for="Address"></label>
                <input asp-for="Address" class="form-control" required id="address"/>
                <span asp-validation-for="Address" style="color: #FF0000"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date"></label>
                <input asp-for="Date" class="form-control" type="date" required id="date"/>
                <span asp-validation-for="Date" style="color: #FF0000"></span>
            </div>
        </div>

        <div class="col-lg-3 offset-md-4">
            <div class="container justify-content-center">

                <button type="button" class="p-4 mt-2 ml-2 btn btn-success" data-bs-toggle="modal" data-bs-target="#product-modal">Add Product</button>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-md-10 ">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Product</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody class="Items" id="Items">
                </tbody>
            </table>

        </div>
    </div>
    <div class="row">
            <div class="col-md-12">
        <br />
            <div class="col-md-2 offset-md-8">
            <label asp-for="TotalAmount">Total Amount</label>
                <input type="text" asp-for="TotalAmount" class="form-control" placeholder="Total Amount" id="TotalAmount" readonly />
            @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
        </div>

            <div class="col-md-2 offset-md-8">
            <label asp-for="GivenAmount">Given Amount</label>
            <input type="text" asp-for="GivenAmount" id="GivenAmount" class="form-control" placeholder="Given Amount" />
            @Html.ValidationMessageFor(model => model.GivenAmount, "", new { @class = "text-danger" })

        </div>

            <div class="col-md-2 offset-md-8">
            <label asp-for="ChangeAmount">Change Amount</label>
                <input type="text" asp-for="ChangeAmount" class="form-control" id="ChangeAmount" placeholder="Change Amount" readonly />
            @Html.ValidationMessageFor(model => model.ChangeAmount, "", new { @class = "text-danger" })
            <br />
        </div>

            <div class="col-md-2 offset-md-8">
            <input type="submit" value="Save Order" class="btn btn-success p-3" id="btnSubmit" />
        </div>

    </div>

    </div>

</form>

<div class="modal fade" id="product-modal" tabindex="-1" aria-labelledby="product-modal-title" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="product-modal-title">Create</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="product-name">Product</label>
                    <select class="form-control" id="productName" required>
                        @foreach (var product in ViewBag.Products)
                        {
                            <option value="@product.ProductName">@product.ProductName</option>
                        }
                    </select>
                    <span class="text-danger field-validation-valid" data-valmsg-for="product-name" data-valmsg-replace="true"></span>
                </div>

                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="number" class="form-control" id="quantity" name="quantity" required value="1"/>
                    <span class="text-danger field-validation-valid" data-valmsg-for="quantity" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="createInvoice()">Add</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <partial name="_ValidationScriptsPartial" />

    <script>

        function createInvoice() {
            var productName = $('#productName').val();

            console.log(productName);

            if (productName.trim() !== '') {

                var quantity = $('#quantity').val();

                console.log(quantity);
                
                var price = 0;
                $.ajax({
                    url: '@Url.Action("GetPrice", "Pos")',
                    type: 'GET',
                    data: { productName: productName },
                    success: function (data) {

                       var amount = parseFloat(data) * parseInt(quantity);
                        console.log(price);


                        var price = $("#Price").val();

                        var row = `<tr>
                                        <td class="productName">${productName}</td>
                                        <td class="price">${data}</td>
                                        <td class="quantity">${quantity}</td>
                                        <td class="amount">${amount}</td>
                                        <td>
                                            <a class="btn btn-danger btn-sm btnDelete">
                                                x
                                            </a>
                                        </td>
                                    </tr>`;

                        $('#Items').append(row);
                        calculateSum();

                $('#product-modal').modal('hide');

                    },
                    error: function () {
                        alert('Failed to retrieve price.');
                    }
                });
            }
        }

        //total calculation
        function calculateSum() {
            var sum = 0;
            // iterate through each td based on class and add the values
            $(".amount").each(function () {

                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sum += parseFloat(value);
                }
            });

            $('#TotalAmount').val(sum);
            var a = $('#TotalAmount').val();
            var b = $('#GivenAmount').val();
            $('#ChangeAmount').val(a - b);
        };

        $('.amount').each(function () {
            calculateSum();
        });

        // change amount
        $('#GivenAmount').keyup(function () {
            var a = $('#TotalAmount').val();
            var b = $('#GivenAmount').val();
            $('#ChangeAmount').val(a - b);
        });

        //remove button click event
        $('#Items').on('click', '.btnDelete', function () {
            $(this).parents('tr').remove();
            calculateSum();
        });

        $("#btnSubmit").click(function () {

            var $form = $('#invoice-form');
            if ($form.valid()) {


                var list = [];
                $('#Items tr').each(function (index, ele) {
                    var orderItem = {
                        ProductName: $('.productName', this).text(),
                        Price: parseFloat($('.price', this).text()),
                        Quantity: parseInt($('.quantity', this).text()),
                        Amount: parseFloat($('.amount', this).text())
                    };
                    list.push(orderItem);
                });
                console.log(list);
                $.ajax({
                    type: 'POST',
                    url: '/Pos/Create',
                    datatype: "Json",
                    data: {
                        CustomerName: $("#customerName").val(),
                        Address: $("#address").val(),
                        Date: $("#date").val(),
                        TotalAmount: parseFloat($("#TotalAmount").val()),
                        GivenAmount: parseFloat($("#GivenAmount").val()),
                        ChangeAmount: parseFloat($("#ChangeAmount").val()),
                        InvoiceDetails: list
                    },
                    success: function (data) {
                        alert('Successfully saved');

                    location.href = '@Url.Action("Create", "Pos")';
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }
        });



    </script>



}